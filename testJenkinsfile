pipeline {
    agent {
        docker {
            image 'node'  // Use Node.js Docker image for the entire pipeline
            args '-u root'  // Run as root user to avoid permission issues
        }
    }

    stages {
        stage('Clean Workspace') {
            steps {
                // Remove any existing .tgz files to avoid conflicts
                sh 'rm -f *.tgz'
            }
        }

        stage('Install Dependencies') {
            steps {
                // Override the default .npm cache directory to a writable location
                sh 'npm install --cache .npm --prefer-offline'
            }
        }

        stage('Package Application') {
            steps {
                // Package the application
                sh 'npm pack'
            }
        }

        stage('Upload App to Artifact') {
            steps {
                // Upload the application to Artifactory securely
                withCredentials([string(credentialsId: 'artifactory-token', variable: 'ARTIFACTORY_TOKEN')]) {
                    sh '''
                        curl -u admin:${ARTIFACTORY_TOKEN} \
                        -T *.tgz \
                        "http://ec2-54-237-170-208.compute-1.amazonaws.com:8081/artifactory/myapp-nodejs/${BUILD_ID}.tgz"
                    '''
                }
            }
        }
    }
}
