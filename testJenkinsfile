pipeline {
    agent {
        docker {
            image 'node'  // Use Node.js Docker image for the entire pipeline
            args '-u root'  // Run as root user to avoid permission issues
        }
    }

    stages {
        stage('Clean Workspace') {
            steps {
                // Remove all files and directories in the workspace
                sh 'rm -rf *'
            }
        }

        stage('Install Dependencies') {
            steps {
                // Install Node.js dependencies, overriding the default .npm cache directory
                sh 'npm install --cache .npm --prefer-offline'
            }
        }

        stage('Package Application') {
            steps {
                // Package the application into a .tgz file
                sh 'npm pack'
            }
        }

        stage('Upload App to Artifact') {
            steps {
                // Upload the application package to Artifactory
                sh """
                    curl -u admin:AP8gcgmmset5jeYChTJYDN6XmDd \\
                    -T *.tgz \\
                    "http://ec2-54-144-115-138.compute-1.amazonaws.com:8081/artifactory/myapp-nodejs/my-app-${BUILD_ID}.tgz"
                """
            }
        }
    }
}

